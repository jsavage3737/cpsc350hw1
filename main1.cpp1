#include <iostream>
#include <fstream>
#include "statsMachine.h"
#include "stringlist.h"

using namespace std;
using namespace hw1;
int main(int argc, char *argv[]){

  // ensuring user gave arguments
  if (argc == 1){
    cout << "No arguments given" << endl;
    cout << "Please add file to read as argument";
    return 0;
  }

  // ensuring user entered only one argument
  if (argc > 2) {
    cout << argc << " arguments given" << endl;
    cout << "Please only enter one argument";
    return 0;
  }

  // variables declared after checking args to prevent
  // needless memory use
  string filepath = argv[1]; // saving filespath
  ifstream inputStream(filepath); // creating filestream object reading from filepath
  string line; // lines read from file are temporarily stored here
  string slice; // slices from lines read temporarily stored here
  int AA,AC,AG,AT,CA,CC,CG,CT,GA,GC,GG,GT,TA,TC,TG,TT; // counts of bigrams
  int sliceStart; // used for selecting bigrams from line
  int filelength; // counts number of lines in file
  int totalLength = 0; // total number of nucleotide chars in file
  int numpairs; // total number of pairs in file


// read all lines in file
  while(getline(inputStream, line)){
    sliceStart = 0; // reset slice starting index for each line

    // used to calculate mean length
    totalLength += line.length();
    cout << line.length() << endl;
    // operations on bigrams
    while (sliceStart < line.length()-2){ // only read complete pairs
      if (line.length()<2){
        break;
      }
      slice = line.substr(sliceStart,2); // read a pair
      cout << slice << endl;

      sliceStart += 2; // move onto next pair
      numpairs++; // keep track of number of pairs
    }
    filelength++;
  }

cout << "works";
//totalLength -= (filelength-1); // line length for all lines up to n-1 is 1 higher


/*  stringlist list;

  cout << list.getSize() << endl;
  cout << list.getIndex(0) << endl;
  list.addMember("Guy");

  for (int x = 0; x<5; x++){
    list.addMember("test");
    cout << list.getSize() << endl;
  }

  for (int x = 0; x<2500; x++){
    cout << list.getIndex(x) << endl;
  }*/
}
